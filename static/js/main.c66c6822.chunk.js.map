{"version":3,"sources":["components/Message/Message.js","components/Controls/Button/Button.js","data/Text.js","components/View/View.js","App.js","serviceWorker.js","index.js"],"names":["Message","_ref","type","value","inputHandler","children","index","input","react_default","a","createElement","onChange","className","Button","props","onClick","text","blocks","messageData","Fragment","role","aria-label","chooseData","name","View","state","block","dataForCollect","buttons","questionsQuantity","inputs","currentValue","form","updateStateHandler","_this","setState","e","_objectSpread","Object","defineProperty","target","nextHandler","childEl","newIndex","concat","window","history","pushState","length","sendData","_this2","this","_blocks$","onpopstate","_blocks$index","send","JSON","parse","stringify","sendDate","Date","db","collection","add","then","docRef","console","log","id","catch","error","_this3","_this$state","currBlock","buttonsInChooseData","map","el","elIndex","Controls_Button_Button","key","components_Message_Message","React","Component","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","firestore","App","components_View_View","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c66c6822.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport './Message.css';\r\n\r\nfunction Message({type, value, inputHandler, index, children}) {\r\n  let input = '';\r\n  if (type === 'text_input') {\r\n    input = <input onChange={inputHandler} value={value} type=\"text\"/>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"Message\">\r\n      <div className=\"MessageText\">\r\n        {children}\r\n        {input}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport './Button.css';\r\n\r\n\r\nfunction Button(props) {\r\n  return (\r\n    <div onClick={props.onClick} className=\"Button\">\r\n      <div className=\"ButtonText\">\r\n        {props.text}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport './Styles.css';\r\n\r\n// –≤–µ—Ç–≤–ª–µ–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–æ–≤ –º–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∫–∞–∫ –æ–±—ä–µ–∫—Ç –≤ –º–∞—Å—Å–∏–≤–µ, –≤–Ω—É—Ç—Ä–∏ –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –º–∞—Å—Å–∏–≤—ã —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏ (–ø–æ –æ–¥–Ω–æ–º—É –Ω–∞ –≤–µ—Ç–∫—É)\r\nexport const blocks = [{\r\n  messageData: (<>\r\n    <div>–ü—Ä–∏–≤–µ—Ç!</div>\r\n    <div className=\"Break\"/>\r\n    <div>–ú–µ–Ω—è –∑–æ–≤—É—Ç room8, —è - –±–æ—Ç <span role=\"img\" aria-label=\"Happy Face\">üòä</span></div>\r\n    <div>–Ø —Ö–æ—á—É –ø–æ–º–æ—á—å –≤–∞–º –Ω–∞–π—Ç–∏ —Å–æ—Å–µ–¥–∞ –º–µ—á—Ç—ã. –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ —Å–µ–±–µ.</div>\r\n  </>),\r\n  chooseData: ['–î–∞–ª–µ–µ'],\r\n  type: 'info',\r\n  name: 'greeting',\r\n}, {\r\n  messageData: (<>\r\n    <div>–û—Å—Ç–∞–≤—å—Ç–µ email –¥–ª—è —Å–≤—è–∑–∏</div>\r\n  </>),\r\n  chooseData: ['–î–∞–ª–µ–µ'],\r\n  type: 'text_input',\r\n  name: 'email',\r\n}, {\r\n  messageData: (<>\r\n    <div>–ì–¥–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∂–∏—Ç—å? –ü–æ–¥–æ–π–¥–µ—Ç —Å—Ç–∞–Ω—Ü–∏—è –º–µ—Ç—Ä–æ –∏–ª–∏ —Ä–∞–π–æ–Ω.</div>\r\n  </>),\r\n  chooseData: ['–î–∞–ª–µ–µ'],\r\n  type: 'text_input',\r\n  name: 'location',\r\n}, {\r\n  messageData: (<>\r\n    <div>–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã –≥–æ—Ç–æ–≤—ã –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –Ω–∞ –ø–æ–∏—Å–∫?</div>\r\n  </>),\r\n  chooseData: ['–º–µ–Ω—å—à–µ –Ω–µ–¥–µ–ª–∏', '–º–µ–Ω—å—à–µ –º–µ—Å—è—Ü–∞', '–±–æ–ª—å—à–µ –º–µ—Å—è—Ü–∞'],\r\n  type: 'single_choice_button',\r\n  name: 'timeForSearch',\r\n}, {\r\n  messageData: (<>\r\n    <div>–û–ø–∏—à–∏—Ç–µ —Å–≤–æ–π —Ä–æ–¥ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.</div>\r\n  </>),\r\n  chooseData: ['–°—Ç—É–¥–µ–Ω—Ç', 'IT', '–Æ—Ä–∏—Å—Ç', '–ñ—É—Ä–Ω–∞–ª–∏—Å—Ç', '–î–∏–∑–∞–π–Ω–µ—Ä', '–í—Ä–∞—á', '–î—Ä—É–≥–æ–µ'],\r\n  type: 'single_choice_button',\r\n  name: 'job',\r\n}, {\r\n  messageData: (<>\r\n    <div>–ö–∞–∫–æ–µ —Å–ª–æ–≤–æ –ª—É—á—à–µ –≤—Å–µ–≥–æ –æ–ø–∏—Å—ã–≤–∞–µ—Ç –≤–∞—Å?</div>\r\n  </>),\r\n  chooseData: ['–°–ø–æ—Ä—Ç—Å–º–µ–Ω', '–î–æ–º–æ—Å–µ–¥', '–ö–∏–Ω–æ–º–∞–Ω', '–ö—É–ª–∏–Ω–∞—Ä', '–•–∞–π–ø–æ–∂–æ—Ä'],\r\n  type: 'single_choice_button',\r\n  name: 'bestWord',\r\n}, {\r\n  messageData: (<>\r\n    <div>–ö–∞–∫–æ–µ —Å–ª–æ–≤–æ —Ö—É–∂–µ –≤—Å–µ–≥–æ –æ–ø–∏—Å—ã–≤–∞–µ—Ç –≤–∞—Å?</div>\r\n  </>),\r\n  chooseData: ['–°–ø–æ—Ä—Ç—Å–º–µ–Ω', '–î–æ–º–æ—Å–µ–¥', '–ö–∏–Ω–æ–º–∞–Ω', '–ö—É–ª–∏–Ω–∞—Ä', '–•–∞–π–ø–æ–∂–æ—Ä'],\r\n  type: 'single_choice_button',\r\n  name: 'worstWord',\r\n}, {\r\n  messageData: (<>\r\n    <div>–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ.</div>\r\n    <div>–Ø –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é –∑–∞–≤—Ç—Ä–∞–∫–∞—Ç—å ...</div>\r\n  </>),\r\n  chooseData: ['–≤ –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–µ', '—Å —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–º'],\r\n  type: 'single_choice_button',\r\n  name: 'breakfast',\r\n}, {\r\n  messageData: (<>\r\n    <div>–°–∫–æ–ª—å–∫–æ –≤–∞–º –ª–µ—Ç?</div>\r\n  </>),\r\n  chooseData: ['–û—Ç–ø—Ä–∞–≤–∏—Ç—å'],\r\n  type: 'text_input',\r\n  name: 'age',\r\n}, {\r\n  messageData: (<>\r\n    <div>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</div>\r\n  </>),\r\n  chooseData: ['–û—Ç–ø—Ä–∞–≤–∏—Ç—å'],\r\n  type: 'roommates',\r\n  name: 'additionalComments',\r\n}, {\r\n  messageData: (<>\r\n    <div>–°–ø–∞—Å–∏–±–æ!</div>\r\n    <div>–Ø –æ–±—Ä–∞–±–æ—Ç–∞—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –≤ —Ç–µ—á–µ–Ω–∏–µ –Ω–µ–¥–µ–ª–∏ –±—É–¥—É –≤—ã—Å—ã–ª–∞—Ç—å –≤–∞–º –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∞–Ω–∫–µ—Ç—ã.</div>\r\n  </>),\r\n  chooseData: [],\r\n  type: 'last',\r\n  name: 'finish',\r\n}];","import React from 'react';\r\nimport './View.css';\r\nimport Message from '../Message/Message';\r\nimport Button from \"../Controls/Button/Button\";\r\nimport {blocks} from \"../../data/Text\";\r\n\r\nclass View extends React.Component {\r\n  state = {\r\n    type: '',\r\n    index: 0,\r\n    block: {},\r\n    dataForCollect: {\r\n      buttons: '',\r\n      name: '',\r\n    },\r\n    chooseData: [],\r\n    messageData: '',\r\n    questionsQuantity: 10,\r\n    inputs: [],\r\n    currentValue: '',\r\n    form: {}\r\n  };\r\n\r\n  updateStateHandler = (type, messageData, chooseData, index, questionsQuantity) => {\r\n    questionsQuantity = questionsQuantity || this.state.questionsQuantity;\r\n    const block = blocks[index];\r\n    this.setState({\r\n      type,\r\n      messageData,\r\n      chooseData,\r\n      index,\r\n      block,\r\n      questionsQuantity\r\n    });\r\n  };\r\n\r\n  inputHandler = (e) => {\r\n    this.setState({\r\n      form: {\r\n        ...this.state.form,\r\n        [this.state.block.name]: e.target.value\r\n      }\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {messageData, chooseData, type} = blocks[0];\r\n    this.updateStateHandler(type, messageData, chooseData, 0);\r\n\r\n    window.onpopstate = ({state}) => {\r\n      const {index} = state;\r\n      const {type, messageData, chooseData} = blocks[index];\r\n      this.updateStateHandler(type, messageData, chooseData, index, this.state.questionsQuantity + 1);\r\n    };\r\n  }\r\n\r\n  nextHandler = (childEl) => {\r\n    const {index} = this.state;\r\n    const newIndex = index + 1;\r\n    const block = blocks[newIndex];\r\n    const {type, messageData, chooseData, name} = block;\r\n\r\n    this.setState({\r\n      dataForCollect: {\r\n        buttons: this.state.dataForCollect.buttons.concat(childEl),\r\n        name\r\n      },\r\n    });\r\n\r\n    this.updateStateHandler(type, messageData, chooseData, newIndex, this.state.questionsQuantity - 1);\r\n    window.history.pushState({index: newIndex}, name, `#${name}`);\r\n\r\n    if (newIndex === blocks.length - 1) {\r\n      this.sendData();\r\n    }\r\n  };\r\n\r\n  sendData() {\r\n    const send = {\r\n      ...JSON.parse(JSON.stringify(this.state)),\r\n      sendDate: new Date(),\r\n    };\r\n\r\n    this.props.db.collection('profiles')\r\n      .add(send)\r\n      .then(function(docRef) {\r\n        console.log(\"Document written with ID: \", docRef.id);\r\n      })\r\n      .catch(function(error) {\r\n        console.error(\"Error adding document: \", error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const {messageData, chooseData, index} = this.state;\r\n    const currBlock = blocks[index];\r\n\r\n    let buttonsInChooseData = [];\r\n\r\n    if (chooseData.length) {\r\n      buttonsInChooseData = chooseData.map((el, elIndex) => {\r\n        return <Button key={elIndex} onClick={() => this.nextHandler(el)} text={el} />\r\n      });\r\n    }\r\n\r\n    let buttons = <div className=\"ButtonsWrapper\">{buttonsInChooseData}</div>;\r\n\r\n    if (buttonsInChooseData.length > 2) {\r\n      buttons = <div className=\"ButtonsWrapperMultiple\">{buttonsInChooseData}</div>;\r\n    }\r\n\r\n    return (\r\n      <div className=\"View\">\r\n        {this.state.questionsQuantity ? <div className='QuestionsQuantity'>–û—Å—Ç–∞–ª–æ—Å—å –≤–æ–ø—Ä–æ—Å–æ–≤: {this.state.questionsQuantity}</div> : ''}\r\n        <Message\r\n          type={this.state.type}\r\n          index={this.state.index}\r\n          inputHandler={this.inputHandler}\r\n          value={this.state.form[currBlock.name] || ''}\r\n        >\r\n          {messageData}\r\n        </Message>\r\n        {buttons}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default View;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport View from './components/View/View';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nfirebase.initializeApp({\r\n  apiKey: 'AIzaSyC6Bmz27pWZ4q9dOv8i4AUllEY3sLL9Pm4',\r\n  authDomain: \"room8-fd9e6.firebaseapp.com\",\r\n  databaseURL: \"https://room8-fd9e6.firebaseio.com\",\r\n  projectId: \"room8-fd9e6\",\r\n});\r\n\r\nconst db = firebase.firestore();\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <View db={db}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}