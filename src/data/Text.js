import React from "react";
import './Styles.css';

// –≤–µ—Ç–≤–ª–µ–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–æ–≤ –º–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∫–∞–∫ –æ–±—ä–µ–∫—Ç –≤ –º–∞—Å—Å–∏–≤–µ, –≤–Ω—É—Ç—Ä–∏ –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –º–∞—Å—Å–∏–≤—ã —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏ (–ø–æ –æ–¥–Ω–æ–º—É –Ω–∞ –≤–µ—Ç–∫—É)
export const blocks = [{
  messageData: (<>
    <div>–ü—Ä–∏–≤–µ—Ç!</div>
    <div className="Break"/>
    <div>–ú–µ–Ω—è –∑–æ–≤—É—Ç room8, —è - –±–æ—Ç <span role="img" aria-label="Happy Face">üòä</span></div>
    <div>–Ø —Ö–æ—á—É –ø–æ–º–æ—á—å –≤–∞–º –Ω–∞–π—Ç–∏ —Å–æ—Å–µ–¥–∞ –º–µ—á—Ç—ã. –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ —Å–µ–±–µ.</div>
  </>),
  chooseData: ['–î–∞–ª–µ–µ'],
  type: 'start',
  name: 'greeting',
}, {
  messageData: (<>
    <div>–û—Å—Ç–∞–≤—å—Ç–µ email –¥–ª—è —Å–≤—è–∑–∏</div>
  </>),
  chooseData: ['–î–∞–ª–µ–µ'],
  type: 'start',
  name: 'email',
}, {
  messageData: (<>
    <div>–ì–¥–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∂–∏—Ç—å? –ü–æ–¥–æ–π–¥–µ—Ç —Å—Ç–∞–Ω—Ü–∏—è –º–µ—Ç—Ä–æ –∏–ª–∏ —Ä–∞–π–æ–Ω.</div>
  </>),
  chooseData: ['–î–∞–ª–µ–µ'],
  type: 'roommates',
  name: 'location',
}, {
  messageData: (<>
    <div>–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã –≥–æ—Ç–æ–≤—ã –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –Ω–∞ –ø–æ–∏—Å–∫?</div>
  </>),
  chooseData: ['–º–µ–Ω—å—à–µ –Ω–µ–¥–µ–ª–∏', '–º–µ–Ω—å—à–µ –º–µ—Å—è—Ü–∞', '–±–æ–ª—å—à–µ –º–µ—Å—è—Ü–∞'],
  type: 'roommates',
  name: 'timeForSearch',
}, {
  messageData: (<>
    <div>–û–ø–∏—à–∏—Ç–µ —Å–≤–æ–π —Ä–æ–¥ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.</div>
  </>),
  chooseData: ['–°—Ç—É–¥–µ–Ω—Ç', 'IT', '–Æ—Ä–∏—Å—Ç', '–ñ—É—Ä–Ω–∞–ª–∏—Å—Ç', '–î–∏–∑–∞–π–Ω–µ—Ä', '–í—Ä–∞—á', '–î—Ä—É–≥–æ–µ'],
  type: 'roommates',
  name: 'job',
}, {
  messageData: (<>
    <div>–ö–∞–∫–æ–µ —Å–ª–æ–≤–æ –ª—É—á—à–µ –≤—Å–µ–≥–æ –æ–ø–∏—Å—ã–≤–∞–µ—Ç –≤–∞—Å?</div>
  </>),
  chooseData: ['–°–ø–æ—Ä—Ç—Å–º–µ–Ω', '–î–æ–º–æ—Å–µ–¥', '–ö–∏–Ω–æ–º–∞–Ω', '–ö—É–ª–∏–Ω–∞—Ä', '–•–∞–π–ø–æ–∂–æ—Ä'],
  type: 'roommates',
  name: 'bestWord',
}, {
  messageData: (<>
    <div>–ö–∞–∫–æ–µ —Å–ª–æ–≤–æ —Ö—É–∂–µ –≤—Å–µ–≥–æ –æ–ø–∏—Å—ã–≤–∞–µ—Ç –≤–∞—Å?</div>
  </>),
  chooseData: ['–°–ø–æ—Ä—Ç—Å–º–µ–Ω', '–î–æ–º–æ—Å–µ–¥', '–ö–∏–Ω–æ–º–∞–Ω', '–ö—É–ª–∏–Ω–∞—Ä', '–•–∞–π–ø–æ–∂–æ—Ä'],
  type: 'roommates',
  name: 'worstWord',
}, {
  messageData: (<>
    <div>–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ.</div>
    <div>–Ø –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é –∑–∞–≤—Ç—Ä–∞–∫–∞—Ç—å ...</div>
  </>),
  chooseData: ['–≤ –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–µ', '—Å —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–º'],
  type: 'roommates',
  name: 'breakfast',
}, {
  messageData: (<>
    <div>–°–∫–æ–ª—å–∫–æ –≤–∞–º –ª–µ—Ç?</div>
  </>),
  chooseData: ['–û—Ç–ø—Ä–∞–≤–∏—Ç—å'],
  type: 'roommates',
  name: 'age',
}, {
  messageData: (<>
    <div>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</div>
  </>),
  chooseData: ['–û—Ç–ø—Ä–∞–≤–∏—Ç—å'],
  type: 'roommates',
  name: 'additionalComments',
}, {
  messageData: (<>
    <div>–°–ø–∞—Å–∏–±–æ!</div>
    <div>–Ø –æ–±—Ä–∞–±–æ—Ç–∞—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –≤ —Ç–µ—á–µ–Ω–∏–µ –Ω–µ–¥–µ–ª–∏ –±—É–¥—É –≤—ã—Å—ã–ª–∞—Ç—å –≤–∞–º –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∞–Ω–∫–µ—Ç—ã.</div>
  </>),
  chooseData: [],
  type: 'last',
  name: 'finish',
}];

function getFlattened() {

}

let next = 0;
const flattened = blocks.forEach(
  function(acc, curr, index, arr) {
    if (curr.blocks) {
      // recursion
    }

    next = index + 1;
    if (next === arr.length) {
      next = null;
    }

    return acc.concat[{
      ...curr,
      next: next
    }]
  },
  []
)

export const textHandler = (type, index, inputHandler, currentInput) => {

  if (type === 'start' && index === 0) {
    return   {
      messageData:
        (<>
          <div>–ü—Ä–∏–≤–µ—Ç!</div>
          <div className="Break"/>
          <div>–ú–µ–Ω—è –∑–æ–≤—É—Ç room8, —è - –±–æ—Ç <span role="img" aria-label="Happy Face">üòä</span></div>
          <div>–Ø —Ö–æ—á—É –ø–æ–º–æ—á—å –≤–∞–º –Ω–∞–π—Ç–∏ —Å–æ—Å–µ–¥–∞ –º–µ—á—Ç—ã. –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ —Å–µ–±–µ.</div>
        </>),
      chooseData: ['–î–∞–ª–µ–µ'],
      type: 'start',
      name: 'greeting',
    };
  }

  if (type === 'start' && index === 1) {
    return   {
      messageData:
        (<>
          <div>–û—Å—Ç–∞–≤—å—Ç–µ email –¥–ª—è —Å–≤—è–∑–∏</div>
        </>),
      chooseData: ['–î–∞–ª–µ–µ'],
      type: 'start',
      name: 'email',
    };
  }

  if (type === 'roommates' && index === 1) {
    return {
      messageData:
        (<>
          <div>–ì–¥–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∂–∏—Ç—å? –ü–æ–¥–æ–π–¥–µ—Ç —Å—Ç–∞–Ω—Ü–∏—è –º–µ—Ç—Ä–æ –∏–ª–∏ —Ä–∞–π–æ–Ω.</div>
        </>),
      chooseData: ['–û—Ç–ø—Ä–∞–≤–∏—Ç—å'],
      type: 'roommates',
      name: 'location',
    };
  }

  if (type === 'roommates' && index === 2) {
    return {
      messageData:
        (<>
          <div>–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã –≥–æ—Ç–æ–≤—ã –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –Ω–∞ –ø–æ–∏—Å–∫?</div>
        </>),
      chooseData: ['–º–µ–Ω—å—à–µ –Ω–µ–¥–µ–ª–∏', '–º–µ–Ω—å—à–µ –º–µ—Å—è—Ü–∞', '–±–æ–ª—å—à–µ –º–µ—Å—è—Ü–∞'],
      type: 'roommates',
      name: 'timeForSearch',
    };
  }

  if (type === 'roommates' && index === 3) {
    return {
      messageData:
        (<>
          <div>–û–ø–∏—à–∏—Ç–µ —Å–≤–æ–π —Ä–æ–¥ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.</div>
        </>),
      chooseData: ['–°—Ç—É–¥–µ–Ω—Ç', 'IT', '–Æ—Ä–∏—Å—Ç', '–ñ—É—Ä–Ω–∞–ª–∏—Å—Ç', '–î–∏–∑–∞–π–Ω–µ—Ä', '–í—Ä–∞—á', '–î—Ä—É–≥–æ–µ'],
      type: 'roommates',
      name: 'job',
    };
  }

  if (type === 'roommates' && index === 4) {
    return {
      messageData:
        (<>
          <div>–ö–∞–∫–æ–µ —Å–ª–æ–≤–æ –ª—É—á—à–µ –≤—Å–µ–≥–æ –æ–ø–∏—Å—ã–≤–∞–µ—Ç –≤–∞—Å?</div>
        </>),
      chooseData: ['–°–ø–æ—Ä—Ç—Å–º–µ–Ω', '–î–æ–º–æ—Å–µ–¥', '–ö–∏–Ω–æ–º–∞–Ω', '–ö—É–ª–∏–Ω–∞—Ä', '–•–∞–π–ø–æ–∂–æ—Ä'],
      type: 'roommates',
      name: 'bestWord',
    };
  }

  if (type === 'roommates' && index === 5) {
    return {
      messageData:
        (<>
          <div>–ö–∞–∫–æ–µ —Å–ª–æ–≤–æ —Ö—É–∂–µ –≤—Å–µ–≥–æ –æ–ø–∏—Å—ã–≤–∞–µ—Ç –≤–∞—Å?</div>
        </>),
      chooseData: ['–°–ø–æ—Ä—Ç—Å–º–µ–Ω', '–î–æ–º–æ—Å–µ–¥', '–ö–∏–Ω–æ–º–∞–Ω', '–ö—É–ª–∏–Ω–∞—Ä', '–•–∞–π–ø–æ–∂–æ—Ä'],
      type: 'roommates',
      name: 'worstWord',
    };
  }

  if (type === 'roommates' && index === 6) {
    return {
      messageData:
        (<>
          <div>–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ.</div>
          <div>–Ø –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é –∑–∞–≤—Ç—Ä–∞–∫–∞—Ç—å ...</div>
        </>),
      chooseData: ['–≤ –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–µ', '—Å —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–º'],
      type: 'roommates',
      name: 'breakfast',
    };
  }

  if (type === 'roommates' && index === 7) {
    return {
      messageData:
        (<>
          <div>–°–∫–æ–ª—å–∫–æ –≤–∞–º –ª–µ—Ç?</div>
        </>),
      chooseData: ['–û—Ç–ø—Ä–∞–≤–∏—Ç—å'],
      type: 'roommates',
      name: 'age',
    };
  }

  if (type === 'roommates' && index === 8) {
    return {
      messageData:
        (<>
          <div>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</div>
        </>),
      chooseData: ['–û—Ç–ø—Ä–∞–≤–∏—Ç—å'],
      type: 'roommates',
      name: 'additionalComments',
    };
  }

  if (type === 'last' && index === 0) {
    return {
      messageData:
        (<>
          <div>–°–ø–∞—Å–∏–±–æ!</div>
          <div>–Ø –æ–±—Ä–∞–±–æ—Ç–∞—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –≤ —Ç–µ—á–µ–Ω–∏–µ –Ω–µ–¥–µ–ª–∏ –±—É–¥—É –≤—ã—Å—ã–ª–∞—Ç—å –≤–∞–º –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∞–Ω–∫–µ—Ç—ã.</div>
        </>),
      chooseData: [],
      type: 'last',
      name: 'finish',
    };
  }

};